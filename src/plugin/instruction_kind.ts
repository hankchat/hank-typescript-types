// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v5.28.0
// source: plugin/instruction_kind.proto

/* eslint-disable */

/** [Internal] Kinds of instructions that can be sent to hank plugins. */
export enum InstructionKind {
  /** Plugin - Plugin entry point. */
  Plugin = 0,
  /** GetMetadata - Get the plugins metadata. */
  GetMetadata = 1,
  /** Install - Call the plugins install function. (only happens once) */
  Install = 2,
  /** Initialize - Call the plugins initialize function. (happens on every load) */
  Initialize = 3,
  /** Shutdown - Call the plugins shutdown function. (happens on reload, unload, uninstall) */
  Shutdown = 4,
  /** ChatMessage - Call the plguins chat message handler. */
  ChatMessage = 5,
  /** ChatCommand - Call the plguins chat command handler. */
  ChatCommand = 6,
  /** ScheduledJob - Call the plguins scheduled job handler. */
  ScheduledJob = 7,
  UNRECOGNIZED = -1,
}

export function instructionKindFromJSON(object: any): InstructionKind {
  switch (object) {
    case 0:
    case "Plugin":
      return InstructionKind.Plugin;
    case 1:
    case "GetMetadata":
      return InstructionKind.GetMetadata;
    case 2:
    case "Install":
      return InstructionKind.Install;
    case 3:
    case "Initialize":
      return InstructionKind.Initialize;
    case 4:
    case "Shutdown":
      return InstructionKind.Shutdown;
    case 5:
    case "ChatMessage":
      return InstructionKind.ChatMessage;
    case 6:
    case "ChatCommand":
      return InstructionKind.ChatCommand;
    case 7:
    case "ScheduledJob":
      return InstructionKind.ScheduledJob;
    case -1:
    case "UNRECOGNIZED":
    default:
      return InstructionKind.UNRECOGNIZED;
  }
}

export function instructionKindToJSON(object: InstructionKind): string {
  switch (object) {
    case InstructionKind.Plugin:
      return "Plugin";
    case InstructionKind.GetMetadata:
      return "GetMetadata";
    case InstructionKind.Install:
      return "Install";
    case InstructionKind.Initialize:
      return "Initialize";
    case InstructionKind.Shutdown:
      return "Shutdown";
    case InstructionKind.ChatMessage:
      return "ChatMessage";
    case InstructionKind.ChatCommand:
      return "ChatCommand";
    case InstructionKind.ScheduledJob:
      return "ScheduledJob";
    case InstructionKind.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
